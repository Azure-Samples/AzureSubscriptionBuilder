{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the key vault."
      }
    },
    "diagSettingsName": {
      "type": "string",
      "metadata": {
        "description": "name of the Diagnostic Settings for Monitoring"
      }
    },
    "workspaceId": {
      "type": "string",
      "metadata": {
        "description": "Id of the Log Analytics Workspace"
      }
    },
    "OwnerObjectId": {
      "type": "string",
      "metadata": {
        "description": "Specifies the object ID of the user in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies. Get it by using Get-AzADUser or Get-AzADServicePrincipal cmdlets."
      }
    },
    "spObjectId": {
      "type": "string",
      "metadata": {
        "description": "Specifies the object ID of the service principal in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies. Get it by using Get-AzADUser or Get-AzADServicePrincipal cmdlets."
      }
    },
    "secretName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the secret that you want to create."
      }
    },
    "secretValue": {
      "type": "securestring",
      "metadata": {
        "description": "Specifies the value of the secret that you want to create."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('keyVaultName')]",
      "apiVersion": "2018-02-14",
      "location": "[resourceGroup().location]",
      "properties": {
        "enabledForTemplateDeployment": true,
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "objectId": "[parameters('ownerObjectId')]",
            "tenantId": "[subscription().tenantId]",
            "permissions": {
              "keys": [
                "All"
              ],
              "secrets": [
                "All"
              ],
              "certificates": [
                "All"
              ]
            }
          },
          {
            "objectId": "[parameters('spObjectId')]",
            "tenantId": "[subscription().tenantId]",
            "permissions": {
              "keys": [
                "create",
                "delete",
                "get",
                "import",
                "list"
              ],
              "secrets": [
                "delete",
                "get",
                "list",
                "set"
              ]
            }
          }
        ],
        "sku": {
          "name": "Standard",
          "family": "A"
        },
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      },
      "resources": [
        {
          "type": "providers/diagnosticSettings",
          "name": "[concat('Microsoft.Insights/', parameters('diagSettingsName'))]",
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
          ],
          "apiVersion": "2017-05-01-preview",
          "properties": {
            "name": "[parameters('diagSettingsName')]",
            "workspaceId": "[parameters('workspaceId')]",
            "logs": [
              {
                "category": "AuditEvent",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ],
            "metrics": [
              {
                "timeGrain": "PT1M",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ]
          }
        }
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/', parameters('secretName'))]",
      "apiVersion": "2018-02-14",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('secretValue')]"
      }
    }
  ]
}